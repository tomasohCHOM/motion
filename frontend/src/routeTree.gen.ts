/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WorkspaceWorkspaceIdRouteRouteImport } from './routes/workspace/$workspaceId/route'
import { Route as WorkspaceWorkspaceIdNotesRouteImport } from './routes/workspace/$workspaceId/notes'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkspaceWorkspaceIdRouteRoute =
  WorkspaceWorkspaceIdRouteRouteImport.update({
    id: '/workspace/$workspaceId',
    path: '/workspace/$workspaceId',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdNotesRoute =
  WorkspaceWorkspaceIdNotesRouteImport.update({
    id: '/notes',
    path: '/notes',
    getParentRoute: () => WorkspaceWorkspaceIdRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/workspace/$workspaceId': typeof WorkspaceWorkspaceIdRouteRouteWithChildren
  '/workspace/$workspaceId/notes': typeof WorkspaceWorkspaceIdNotesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/workspace/$workspaceId': typeof WorkspaceWorkspaceIdRouteRouteWithChildren
  '/workspace/$workspaceId/notes': typeof WorkspaceWorkspaceIdNotesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/workspace/$workspaceId': typeof WorkspaceWorkspaceIdRouteRouteWithChildren
  '/workspace/$workspaceId/notes': typeof WorkspaceWorkspaceIdNotesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/workspace/$workspaceId' | '/workspace/$workspaceId/notes'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/workspace/$workspaceId' | '/workspace/$workspaceId/notes'
  id:
    | '__root__'
    | '/'
    | '/workspace/$workspaceId'
    | '/workspace/$workspaceId/notes'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WorkspaceWorkspaceIdRouteRoute: typeof WorkspaceWorkspaceIdRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId': {
      id: '/workspace/$workspaceId'
      path: '/workspace/$workspaceId'
      fullPath: '/workspace/$workspaceId'
      preLoaderRoute: typeof WorkspaceWorkspaceIdRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/notes': {
      id: '/workspace/$workspaceId/notes'
      path: '/notes'
      fullPath: '/workspace/$workspaceId/notes'
      preLoaderRoute: typeof WorkspaceWorkspaceIdNotesRouteImport
      parentRoute: typeof WorkspaceWorkspaceIdRouteRoute
    }
  }
}

interface WorkspaceWorkspaceIdRouteRouteChildren {
  WorkspaceWorkspaceIdNotesRoute: typeof WorkspaceWorkspaceIdNotesRoute
}

const WorkspaceWorkspaceIdRouteRouteChildren: WorkspaceWorkspaceIdRouteRouteChildren =
  {
    WorkspaceWorkspaceIdNotesRoute: WorkspaceWorkspaceIdNotesRoute,
  }

const WorkspaceWorkspaceIdRouteRouteWithChildren =
  WorkspaceWorkspaceIdRouteRoute._addFileChildren(
    WorkspaceWorkspaceIdRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WorkspaceWorkspaceIdRouteRoute: WorkspaceWorkspaceIdRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
